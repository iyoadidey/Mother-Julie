{% load static %}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mother Julie - Order Menu</title>
    <link href="https://fonts.googleapis.com/css2?family=Sansita:wght@400;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="{% static 'orders_menu.css' %}" />
</head>
<body>
    <div id="root">
        <!-- Topbar -->
        <div class="topbar">
            <div class="topbar-left">
                <img class="logo" src="motherjulie.png" alt="Mother Julie logo">
                <div class="location">
                    <span class="pin">üìç</span>
                    <span class="loc-text">Manila, Philippines</span>
                    <button class="location-search">Change</button>
                </div>
            </div>
            
            <div class="topbar-center">
                <h1>ALL MENU</h1>
            </div>
            
            <div class="topbar-right">
                <div class="username">
                    <div class="profile-pic">üë§</div>
                    <span>Username</span>
                </div>
            </div>
        </div>

        <!-- Orders Button -->
        <button class="orders-btn">
            Orders <span class="orders-count">0</span>
        </button>

        <!-- App Layout -->
        <div class="app">
            <!-- Sidebar -->
            <aside class="sidebar" aria-label="Main navigation">
                <img class="logo" src="{% static 'motherjulie.png' %}" alt="Mother Julie logo">
                <nav>
                    <ul>
                        <li class="nav-item" data-target="all">
                            <img class="nav-logo" src="{% static 'menu.png' %}" alt="All Menu">
                            <span class="nav-label">All Menu</span>
                        </li>
                        <li class="nav-item" data-target="desserts">
                            <img class="nav-logo" src="{% static 'dessert.png' %}" alt="Desserts">
                            <span class="nav-label">Desserts</span>
                        </li>
                        <li class="nav-item" data-target="spuds">
                            <img class="nav-logo" src="{% static 'spud.png' %}" alt="Spuds">
                            <span class="nav-label">Spuds</span>
                        </li>
                        <li class="nav-item" data-target="pasta">
                            <img class="nav-logo" src="{% static 'pasta.png' %}" alt="Pasta / Bread">
                            <span class="nav-label">Pasta / Bread</span>
                        </li>
                        <li class="nav-item" data-target="wrap">
                            <img class="nav-logo" src="{% static 'wrap.png' %}" alt="Wrap">
                            <span class="nav-label">Wrap</span>
                        </li>
                        <li class="nav-item" data-target="appetizers">
                            <img class="nav-logo" src="{% static 'nachos.png' %}" alt="Appetizers">
                            <span class="nav-label">Appetizers</span>
                        </li>
                    </ul>
                </nav>
            </aside>

            <!-- Main Content -->
            <div class="main">
                <!-- ALL MENU Section -->
                <div class="category active" id="all">
                    <h2 class="section-title">ALL MENU</h2>
                    
                    <!-- DESSERTS Category -->
                    <div class="category-section">
                        <h3 class="category-subtitle">DESSERTS</h3>
                        <div class="menu-grid">
                            <!-- Mais Con Yelo -->
                            <div class="card">
                                <img src="mais-con-yelo.jpg" alt="Mais Con Yelo">
                                <div class="card-body">
                                    <h3>Mais Con Yelo</h3>
                                    <div class="availability">Available</div>
                                    <div class="size-select">
                                        <label>
                                            <input type="radio" name="mais-size" value="L"> L
                                        </label>
                                        <label>
                                            <input type="radio" name="mais-size" value="M"> M
                                        </label>
                                    </div>
                                    <div class="price">Php 130 (L) ‚Ä¢ Php 110 (M)</div>
                                </div>
                                <button class="add-to-cart"></button>
                            </div>

                            <!-- Biscoff Classic -->
                            <div class="card">
                                <img src="biscoff-classic.jpg" alt="Biscoff Classic">
                                <div class="card-body">
                                    <h3>Biscoff Classic</h3>
                                    <div class="availability">Available</div>
                                    <div class="size-select">
                                        <label>
                                            <input type="radio" name="biscoff-size" value="L"> L
                                        </label>
                                        <label>
                                            <input type="radio" name="biscoff-size" value="M"> M
                                        </label>
                                    </div>
                                    <div class="price">Php 200 (L) ‚Ä¢ Php 175 (M)</div>
                                </div>
                                <button class="add-to-cart"></button>
                            </div>

                            <!-- Buko Pandan -->
                            <div class="card">
                                <img src="buko-pandan.jpg" alt="Buko Pandan">
                                <div class="card-body">
                                    <h3>Buko Pandan</h3>
                                    <div class="availability">Available</div>
                                    <div class="size-select">
                                        <label>
                                            <input type="radio" name="buko-size" value="L"> L
                                        </label>
                                        <label>
                                            <input type="radio" name="buko-size" value="M"> M
                                        </label>
                                    </div>
                                    <div class="price">Php 120 (L) ‚Ä¢ Php 100 (M)</div>
                                </div>
                                <button class="add-to-cart"></button>
                            </div>
                        </div>
                    </div>

                    <!-- SPUDS Category -->
                    <div class="category-section">
                        <h3 class="category-subtitle">SPUDS</h3>
                        <div class="menu-grid">
                            <!-- Cheesy Bacon -->
                            <div class="card">
                                <img src="cheesy-bacon.jpg" alt="Cheesy Bacon">
                                <div class="card-body">
                                    <h3>Cheesy Bacon</h3>
                                    <div class="availability">Available</div>
                                    <div class="price">Php 159</div>
                                </div>
                                <button class="add-to-cart"></button>
                            </div>

                            <!-- Chili Con Carne -->
                            <div class="card">
                                <img src="chili-con-carne.jpg" alt="Chili Con Carne">
                                <div class="card-body">
                                    <h3>Chili Con Carne</h3>
                                    <div class="availability">Available</div>
                                    <div class="price">Php 179</div>
                                </div>
                                <button class="add-to-cart"></button>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Individual Category Sections -->
                <div class="category" id="desserts">
                    <h2 class="section-title">DESSERTS</h2>
                    <div class="menu-grid">
                        <!-- Dessert items will be populated here -->
                    </div>
                </div>

                <div class="category" id="spuds">
                    <h2 class="section-title">SPUDS</h2>
                    <div class="menu-grid">
                        <!-- Spud items will be populated here -->
                    </div>
                </div>

                <div class="category" id="pasta">
                    <h2 class="section-title">PASTA / BREAD</h2>
                    <div class="menu-grid">
                        <!-- Pasta items will be populated here -->
                    </div>
                </div>

                <div class="category" id="wrap">
                    <h2 class="section-title">WRAP</h2>
                    <div class="menu-grid">
                        <!-- Wrap items will be populated here -->
                    </div>
                </div>

                <div class="category" id="appetizers">
                    <h2 class="section-title">APPETIZERS</h2>
                    <div class="menu-grid">
                        <!-- Appetizer items will be populated here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Location Modal -->
        <div class="location-modal" id="locationModal">
            <div class="modal-content">
                <div class="modal-header">
                    <div>
                        <h3>Set Your Location</h3>
                        <div class="modal-subtitle">Philippines Only</div>
                    </div>
                    <button class="modal-close" id="modalClose">&times;</button>
                </div>
                
                <div class="search-box">
                    <input type="text" id="locationInput" placeholder="Search cities in Philippines...">
                    <button class="search-btn" id="searchBtn">Search</button>
                </div>
                
                <div class="suggestions" id="suggestions"></div>
                
                <div class="current-location">
                    <button class="current-location-btn" id="currentLocationBtn">
                        üìç Use Current Location
                    </button>
                    <div class="location-error" id="locationError">
                        Location outside Philippines. Please search for Philippine locations only.
                    </div>
                </div>
            </div>
        </div>

        <!-- Billing Panel -->
        <div class="billing-panel" id="billingPanel">
            <div class="billing-header">
                <h2>Your Order</h2>
                <button class="billing-close" id="billingClose">‚úï</button>
            </div>
            <div class="billing-items" id="billingItems">
                <!-- Order items will appear here -->
            </div>
            <div class="billing-summary">
                <div class="subtotal">Subtotal: Php 0.00</div>
                <div class="tax">Tax: Php 0.00</div>
                <div class="total">Total: Php 0.00</div>
            </div>
            <div class="order-type">
                <button>Dine-in</button>
                <button>Takeaway</button>
            </div>
            <div class="payment-methods">
                <button>Cash</button>
                <button>Card</button>
                <button>GCash</button>
            </div>
            <button class="process">Place Order</button>
        </div>
    </div>

<script>
// Order Management System
let cart = [];
let orderCount = 0;

// Category Management
function showCategory(category) {
    // Remove active class from all nav items
    const navItems = document.querySelectorAll('.nav-item');
    navItems.forEach(item => {
        item.classList.remove('active');
    });
    
    // Add active class to clicked item
    const clickedItem = document.querySelector(`[data-target="${category}"]`);
    if (clickedItem) {
        clickedItem.classList.add('active');
    }
    
    // Hide all categories
    const categories = document.querySelectorAll('.category');
    categories.forEach(cat => {
        cat.classList.remove('active');
    });
    
    // Show selected category
    if (category === 'all') {
        document.getElementById('all').classList.add('active');
    } else {
        const targetCategory = document.getElementById(category);
        if (targetCategory) {
            targetCategory.classList.add('active');
        }
    }
}

// Toggle Billing Panel - ONLY FOR ORDERS BUTTON
function toggleBillingPanel() {
    const billingPanel = document.getElementById('billingPanel');
    if (!billingPanel) {
        console.error('Billing panel not found!');
        return;
    }
    
    billingPanel.classList.toggle('open');
    
    if (billingPanel.classList.contains('open')) {
        console.log('Opening billing panel');
        updateBillingPanel();
    } else {
        console.log('Closing billing panel');
    }
}

// Update Billing Panel
function updateBillingPanel() {
    const billingPanel = document.getElementById('billingPanel');
    const billingItems = document.getElementById('billingItems');
    const subtotalElement = document.querySelector('.subtotal');
    const totalElement = document.querySelector('.total');
    
    // Only update if billing panel is open
    if (!billingPanel.classList.contains('open')) {
        return;
    }
    
    // Clear current items
    billingItems.innerHTML = '';
    
    if (cart.length === 0) {
        billingItems.innerHTML = '<div class="b-item" style="text-align: center; color: #666;">No items in cart</div>';
        subtotalElement.textContent = 'Subtotal: Php 0.00';
        totalElement.textContent = 'Total: Php 0.00';
        return;
    }
    
    let subtotal = 0;
    
    cart.forEach((item, index) => {
        const itemElement = document.createElement('div');
        itemElement.className = 'b-item';
        itemElement.innerHTML = `
            <img src="${item.image}" alt="${item.name}">
            <div class="b-desc">
                <div class="b-title">${item.name}</div>
                <div class="b-meta">${item.size ? `Size: ${item.size}` : ''} ‚Ä¢ Qty: ${item.quantity}</div>
            </div>
            <div class="b-price">Php ${(item.price * item.quantity).toFixed(2)}</div>
            <button class="remove-item" onclick="removeFromCart(${index})">‚úï</button>
        `;
        billingItems.appendChild(itemElement);
        
        subtotal += item.price * item.quantity;
    });
    
    const tax = subtotal * 0.12; // 12% tax
    const total = subtotal + tax;
    
    subtotalElement.textContent = `Subtotal: Php ${subtotal.toFixed(2)}`;
    document.querySelector('.tax').textContent = `Tax: Php ${tax.toFixed(2)}`;
    totalElement.textContent = `Total: Php ${total.toFixed(2)}`;
}

// Add to Cart Function
function addToCart(cardElement) {
    const itemName = cardElement.querySelector('h3').textContent;
    const itemImage = cardElement.querySelector('img').src;
    
    // Get selected size and price
    let selectedSize = '';
    let price = 0;
    
    const sizeRadios = cardElement.querySelectorAll('input[type="radio"]');
    if (sizeRadios.length > 0) {
        const selectedRadio = Array.from(sizeRadios).find(radio => radio.checked);
        if (selectedRadio) {
            selectedSize = selectedRadio.value;
            // Extract price based on size (simplified logic)
            const priceText = cardElement.querySelector('.price').textContent;
            const priceMatch = priceText.match(/Php\s*(\d+)/);
            price = priceMatch ? parseInt(priceMatch[1]) : 0;
        } else {
            alert('Please select a size');
            return;
        }
    } else {
        // For items without size options
        const priceText = cardElement.querySelector('.price').textContent;
        const priceMatch = priceText.match(/Php\s*(\d+)/);
        price = priceMatch ? parseInt(priceMatch[1]) : 0;
    }
    
    // Check if item already exists in cart
    const existingItemIndex = cart.findIndex(item => 
        item.name === itemName && item.size === selectedSize
    );
    
    if (existingItemIndex > -1) {
        // Increase quantity if item exists
        cart[existingItemIndex].quantity += 1;
    } else {
        // Add new item to cart
        cart.push({
            name: itemName,
            image: itemImage,
            size: selectedSize,
            price: price,
            quantity: 1
        });
    }
    
    // Update orders count
    orderCount += 1;
    updateOrdersCount();
    
    // Real-time update billing panel if it's open
    updateBillingPanel();
}

// Remove from Cart
function removeFromCart(index) {
    orderCount -= cart[index].quantity;
    cart.splice(index, 1);
    updateOrdersCount();
    updateBillingPanel();
}

// Update Orders Count
function updateOrdersCount() {
    const ordersCountElement = document.querySelector('.orders-count');
    ordersCountElement.textContent = orderCount;
    
    // Add animation
    ordersCountElement.style.transform = 'scale(1.2)';
    setTimeout(() => {
        ordersCountElement.style.transform = 'scale(1)';
    }, 300);
}

// Process Order
function processOrder() {
    if (cart.length === 0) {
        alert('Your cart is empty!');
        return;
    }
    
    const orderType = document.querySelector('.order-type button:first-child').classList.contains('active') ? 'Dine-in' : 'Takeaway';
    
    // Simulate order processing
    alert(`Order placed successfully!\nOrder Type: ${orderType}\nTotal: ${document.querySelector('.total').textContent}\n\nThank you for your order!`);
    
    // Clear cart
    cart = [];
    orderCount = 0;
    updateOrdersCount();
    updateBillingPanel();
    
    // Close billing panel
    document.getElementById('billingPanel').classList.remove('open');
}

// Initialize everything
document.addEventListener('DOMContentLoaded', function() {
    // Initialize with all menu
    showCategory('all');
    
    // Add click events to nav items
    const navItems = document.querySelectorAll('.nav-item');
    navItems.forEach(item => {
        item.addEventListener('click', function() {
            const target = this.getAttribute('data-target');
            showCategory(target);
        });
    });

    // Add to cart buttons
    const addToCartButtons = document.querySelectorAll('.add-to-cart');
    addToCartButtons.forEach(button => {
        button.addEventListener('click', function() {
            const card = this.closest('.card');
            addToCart(card);
        });
    });

    // Orders button functionality
    const ordersBtn = document.querySelector('.orders-btn');
    if (ordersBtn) {
        ordersBtn.addEventListener('click', toggleBillingPanel);
    }
    
    // Billing close button
    document.getElementById('billingClose').addEventListener('click', function() {
        document.getElementById('billingPanel').classList.remove('open');
    });

    // Order type selection
    const orderTypeButtons = document.querySelectorAll('.order-type button');
    orderTypeButtons.forEach(button => {
        button.addEventListener('click', function() {
            orderTypeButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
        });
    });

    // Payment method selection
    const paymentButtons = document.querySelectorAll('.payment-methods button');
    paymentButtons.forEach(button => {
        button.addEventListener('click', function() {
            paymentButtons.forEach(btn => btn.classList.remove('active'));
            this.classList.add('active');
        });
    });

    // Process order button
    document.querySelector('.process').addEventListener('click', processOrder);

    // Set default order type
    orderTypeButtons[0].classList.add('active');
    paymentButtons[0].classList.add('active');

    // Location Modal functionality
    initializeLocationModal();
});

// Location Modal functionality
function initializeLocationModal() {
    const locationModal = document.getElementById('locationModal');
    const locationInput = document.getElementById('locationInput');
    const searchBtn = document.getElementById('searchBtn');
    const suggestions = document.getElementById('suggestions');
    const currentLocationBtn = document.getElementById('currentLocationBtn');
    const locationError = document.getElementById('locationError');
    const modalClose = document.getElementById('modalClose');

    const philippineLocations = ["Manila", "Quezon City", "Makati", "Taguig", "Pasig", "Mandaluyong", "San Juan", "Pasay", "Para√±aque", "Las Pi√±as", "Muntinlupa", "Marikina", "Caloocan", "Valenzuela", "Malabon", "Navotas", "Cebu City", "Davao City", "Baguio", "Iloilo City", "Bacolod", "Cagayan de Oro", "Zamboanga City"];

    document.querySelector('.location-search').addEventListener('click', () => {
        locationModal.style.display = 'flex';
        locationInput.focus();
    });

    modalClose.addEventListener('click', () => {
        locationModal.style.display = 'none';
        clearError();
    });

    locationModal.addEventListener('click', (e) => {
        if (e.target === locationModal) {
            locationModal.style.display = 'none';
            clearError();
        }
    });

    searchBtn.addEventListener('click', searchLocations);
    locationInput.addEventListener('input', searchLocations);
    locationInput.addEventListener('keypress', (e) => {
        if (e.key === 'Enter') searchLocations();
    });

    function searchLocations() {
        const query = locationInput.value.toLowerCase().trim();
        suggestions.innerHTML = '';
        
        if (query.length === 0) return;
        
        const filtered = philippineLocations.filter(location => 
            location.toLowerCase().includes(query)
        );
        
        if (filtered.length === 0) {
            suggestions.innerHTML = '<div class="suggestion-item">No locations found in Philippines</div>';
            return;
        }
        
        filtered.forEach(location => {
            const div = document.createElement('div');
            div.className = 'suggestion-item';
            div.textContent = location;
            div.addEventListener('click', () => selectLocation(location));
            suggestions.appendChild(div);
        });
    }

    function selectLocation(location) {
        document.querySelector('.location .loc-text').textContent = location;
        locationModal.style.display = 'none';
        locationInput.value = '';
        suggestions.innerHTML = '';
        clearError();
    }

    currentLocationBtn.addEventListener('click', () => {
        if (!navigator.geolocation) {
            showError('Geolocation is not supported by your browser');
            return;
        }
        
        currentLocationBtn.textContent = 'üìç Getting Location...';
        currentLocationBtn.disabled = true;
        
        navigator.geolocation.getCurrentPosition(
            (position) => {
                const lat = position.coords.latitude;
                const lng = position.coords.longitude;
                
                if (isInPhilippines(lat, lng)) {
                    const city = getNearestPhilippineCity(lat, lng);
                    document.querySelector('.location .loc-text').textContent = city;
                    locationModal.style.display = 'none';
                    clearError();
                } else {
                    showError('Location outside Philippines. Please search for Philippine locations only.');
                }
                
                currentLocationBtn.textContent = 'üìç Use Current Location';
                currentLocationBtn.disabled = false;
            },
            (error) => {
                showError('Unable to retrieve your location. Please search manually.');
                currentLocationBtn.textContent = 'üìç Use Current Location';
                currentLocationBtn.disabled = false;
            }
        );
    });

    function isInPhilippines(lat, lng) {
        const phBounds = { north: 21.5, south: 4.0, west: 116.0, east: 127.0 };
        return lat >= phBounds.south && lat <= phBounds.north && lng >= phBounds.west && lng <= phBounds.east;
    }

    function getNearestPhilippineCity(lat, lng) {
        if (lat > 14.5 && lng > 120.9) return "Manila";
        if (lat > 10.3 && lng < 124.0) return "Cebu City";
        if (lat < 7.5 && lng > 125.5) return "Davao City";
        if (lat > 16.4) return "Baguio";
        return "Metro Manila";
    }

    function showError(message) {
        locationError.textContent = message;
        locationError.style.display = 'block';
    }

    function clearError() {
        locationError.style.display = 'none';
    }
}
</script>
</body>
</html>